nohup: ignoring input
 * Serving Flask app "Servers/ReplayBuffer/server"
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
2020-09-10 17:51:52.424305: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /home/franco/.mujoco/mujoco200/bin:/usr/lib/nvidia-000
2020-09-10 17:51:52.424376: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
2020-09-10 17:51:52.424412: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (francesco): /proc/driver/nvidia/version does not exist
2020-09-10 17:51:52.424940: I tensorflow/core/platform/cpu_feature_guard.cc:143] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2
2020-09-10 17:51:52.449231: I tensorflow/core/platform/profile_utils/cpu_utils.cc:102] CPU Frequency: 1992000000 Hz
2020-09-10 17:51:52.449647: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x7fe7d8000b20 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-09-10 17:51:52.449725: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [10/Sep/2020 17:54:39] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:40] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:41] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:41] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:42] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:43] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:43] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:44] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:44] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:45] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:46] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:46] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:47] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:47] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:48] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:49] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:49] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:50] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:51] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:54:51] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:32] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:32] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:33] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:33] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:34] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:34] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:35] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:35] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:36] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:36] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:37] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:38] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:38] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:39] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:39] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:40] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:40] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:41] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:41] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:42] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:43] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:43] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:44] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:44] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:45] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:45] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:46] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:47] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:47] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(1, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(2, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(3, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(4, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(5, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(6, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(7, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(8, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(9, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(10, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(11, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(12, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(13, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(14, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(15, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(16, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(17, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(18, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(19, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(20, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(21, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(22, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(23, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(24, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(25, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(26, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(27, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(28, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(29, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(30, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(31, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(32, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(33, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(34, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(35, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(36, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(37, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(38, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(39, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(40, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(41, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(42, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(43, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(44, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(45, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(46, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(47, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(48, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])
After sored tf.Tensor(49, shape=(), dtype=int64)
Store in online Buffer dict_keys(['state', 'action', 'camera', 'next_camera', 'reward', 'next_state', 'terminated'])127.0.0.1 - - [10/Sep/2020 17:55:48] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:48] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:49] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:50] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:50] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:51] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
127.0.0.1 - - [10/Sep/2020 17:55:52] "[37mPOST /storeonlinedata HTTP/1.1[0m" 200 -
